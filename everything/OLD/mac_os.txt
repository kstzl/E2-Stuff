@name ipad_os

@inputs     [ Egp SoundEmitter ]:wirelink
@persist    [ K3_S ]:number
@persist    [ K3_ActualProgram ]:string

interval(1)

if(first()){
    
    function void wirelink:box(Index:number,Pos:vector2,Size:vector2,Color:vector4){
        This:egpBox(Index,Pos,Size)
        This:egpColor(Index,Color)   
    }
    function void wirelink:boxoutline(Index:number,Pos:vector2,Size:vector2,Color:vector4){
        This:egpBoxOutline(Index,Pos,Size)
        This:egpColor(Index,Color)   
        This:egpSize(Index,1)
    }
    function void wirelink:boxoutline(Index:number,Pos:vector2,Size:vector2,Color:vector4,Outline:number){
        This:egpBoxOutline(Index,Pos,Size)
        This:egpColor(Index,Color)   
        This:egpSize(Index,Outline)
    }
    function void wirelink:roundbox(Index:number,Pos:vector2,Size:vector2,Color:vector4){
        This:egpRoundedBox(Index,Pos,Size)
        This:egpColor(Index,Color)   
    }
    function void wirelink:roundboxoutline(Index:number,Pos:vector2,Size:vector2,Color:vector4){
        This:egpRoundedBoxOutline(Index,Pos,Size)
        This:egpColor(Index,Color)  
        This:egpSize(Index,1)
    }
    function void wirelink:roundboxoutline(Index:number,Pos:vector2,Size:vector2,Color:vector4,S:number){
        This:egpRoundedBoxOutline(Index,Pos,Size)
        This:egpColor(Index,Color)  
        This:egpSize(Index,S)
    }
    function void wirelink:line(Index:number,Pos1:vector2,Pos2:vector2,Color:vector4,Size:number){
        This:egpLine(Index,Pos1,Pos2)
        This:egpColor(Index,Color)
        This:egpSize(Index,Size)
    }
    function void wirelink:line(Index:number,Pos1:vector2,Pos2:vector2,Color:vector4){
        This:egpLine(Index,Pos1,Pos2)
        This:egpColor(Index,Color)
    }
    function void wirelink:text(Index:number,Text:string,Pos:vector2,Color:vector,Size:number){
        This:egpText(Index,Text,Pos)
        This:egpColor(Index,Color)
        This:egpSize(Index,Size)
        This:egpAlign(Index,1,1)
    }
    function void wirelink:text(Index:number,Text:string,Pos:vector2,Color:vector4,Size:number){
        This:egpText(Index,Text,Pos)
        This:egpColor(Index,Color)
        This:egpSize(Index,Size)
        This:egpAlign(Index,1,1)
    }
    function void wirelink:text(Index:number,Text:string,Pos:vector2,Color:vector,Size:number,Align:string){
        This:egpText(Index,Text,Pos)
        This:egpColor(Index,Color)
        This:egpSize(Index,Size)
        if(Align == "c"){
            This:egpAlign(Index,1,1)
        }
        elseif(Align == "l"){
            This:egpAlign(Index,2,1)
        }
        elseif(Align == "r"){
            This:egpAlign(Index,0,1)
        }
        else{
            This:egpAlign(Index,1,1)
        }
    }
    function void wirelink:text(Index:number,Text:string,Pos:vector2,Color:vector4,Size:number,Align:string){
        This:egpText(Index,Text,Pos)
        This:egpColor(Index,Color)
        This:egpSize(Index,Size)
        if(Align == "c"){
            This:egpAlign(Index,1,1)
        }
        elseif(Align == "l"){
            This:egpAlign(Index,2,1)
        }
        elseif(Align == "r"){
            This:egpAlign(Index,0,1)
        }
        else{
            This:egpAlign(Index,1,1)
        }
    }
    function number wirelink:button(ID:number,Cursor:vector2){
        local BPos = This:egpPos(ID)
        local BSize = This:egpSize(ID)/2
        local Pressed = inrange(Cursor,BPos-BSize,BPos+BSize)
        return Pressed
    }
    
    function k3_init(){
        
        K3_S = 512 / 2
        
    }
    
    function program(Program_:string){
        
        K3_ActualProgram = Program_
        
        timer(Program_, 0)
          
    }
    
    function restart_program(){
        
        program(K3_ActualProgram)
        
    }
    
    function number prog_init(Program_:string){
        
        K3_ActualProgram == Program_
        
        return clk(Program_)
        
    }
    
    function number prog_loop(Program_:string){
        
        Logic = (K3_ActualProgram == Program_)
        
        return Logic
        
    }
    
    function play_sound(SoundName_:string){
        
        SoundEmitter:setNumber("Play", 1)
        SoundEmitter:setString("SampleName", SoundName_)
            
    }
    
    function draw_app(Index:number, AppName:string, Pos:vector2){
        
        Egp:roundbox(Index, Pos, vec2(128), vec4(255))
        Egp:text(Index + 1, AppName, Pos + vec2(0, 85), vec(255), 25)
        
        if(AppName == "Horloge"){
            
            Egp:egpColor(Index, vec4(45, 45, 45, 255))
            Egp:egpCircle(Index + 2, Pos, vec2(50))
            Egp:box(Index + 3, Pos + vec2(20, 0), vec2(40, 2), vec4(0, 0, 0, 255))
            Egp:box(Index + 4, Pos + vec2(0, -20), vec2(2, 40), vec4(0, 0, 0, 255))
            
        }
        
    }
    
    program("bureau")
    k3_init()
    
}

if(prog_init("bootscreen")){
    
    Egp:egpCircle(1, vec2(K3_S), vec2(80))
    
    Egp:egpCircle(2, vec2(K3_S + 85, K3_S - 10), vec2(50))
    Egp:egpColor(2, vec4(0, 0, 0, 255))
    
    Egp:egpCircle(3, vec2(K3_S, K3_S + 120), vec2(50))
    Egp:egpColor(3, vec4(0, 0, 0, 255))
    
    Egp:egpCircle(4, vec2(K3_S, K3_S - 120), vec2(50))
    Egp:egpColor(4, vec4(0, 0, 0, 255))
    
    Egp:egpCircle(5, vec2(K3_S + 15, K3_S - 110), vec2(10, 30))
    Egp:egpAngle(5, -45)
    
    play_sound("WallHealth.Start")
    timer("exit_bootscreen", 2000)
    
}

if(clk("exit_bootscreen")){ program("bureau") }
if(changed(K3_ActualProgram)){ Egp:egpClear() }


if(prog_init("bureau")){
    
    S = K3_S/2
    
    #Egp:roundbox(1, vec2(S), vec2(128), vec4(45, 45, 45, 255))
    #Egp:egpCircle(2, vec2(S), vec2(50))
    
    draw_app(1, "Horloge", vec2(S))
    
}
if(prog_loop("bureau")){
    
}
