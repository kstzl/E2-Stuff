@name ipad_os

@inputs     [ Egp SoundEmitter Trigger ]:wirelink
@outputs     [ Porte1 Porte2 Porte3 ]:number

@persist    [ K3_S K3_USE ]:number
@persist    [ K3_ActualProgram ]:string
@persist    [ K3_USER ]:entity
@persist    [ K3_CURSOR ]:vector2

@persist    [ IPAD_Name IPAD_SerialNumber IPAD_Version IPAD_HP ]:string
@persist    [ IPAD_Owner ]:entity

@persist    [ FACEID_Checking FACEID_R ]:number
@persist    [ FACEID_User ]:entity

@persist    [ BT_s BT_c ]:table

@persist    [ K3_Heure K3_Minutes K3_Secondes K3_Temps ]:string

@persist    [ Jobs_list ]:table

@persist    [ Musique_index Musique_Channel Musique_mode ]:number
@persist    [ Musique_list ]:table

interval(1)

#[

  _ _____          _    ____   _____ 
 (_)  __ \        | |  / __ \ / ____|
  _| |__) |_ _  __| | | |  | | (___  
 | |  ___/ _` |/ _` | | |  | |\___ \ 
 | | |  | (_| | (_| | | |__| |____) |
 |_|_|   \__,_|\__,_|  \____/|_____/ 
                                     
    By K3CR4FT.:DLL - 2020                                  

]#

function void wirelink:box(Index:number,Pos:vector2,Size:vector2,Color:vector4){
    This:egpBox(Index,Pos,Size)
    This:egpColor(Index,Color)   
}
function void wirelink:boxoutline(Index:number,Pos:vector2,Size:vector2,Color:vector4){
    This:egpBoxOutline(Index,Pos,Size)
    This:egpColor(Index,Color)   
    This:egpSize(Index,1)
}
function void wirelink:boxoutline(Index:number,Pos:vector2,Size:vector2,Color:vector4,Outline:number){
    This:egpBoxOutline(Index,Pos,Size)
    This:egpColor(Index,Color)   
    This:egpSize(Index,Outline)
}
function void wirelink:roundbox(Index:number,Pos:vector2,Size:vector2,Color:vector4){
    This:egpRoundedBox(Index,Pos,Size)
    This:egpColor(Index,Color)   
}
function void wirelink:roundboxoutline(Index:number,Pos:vector2,Size:vector2,Color:vector4){
    This:egpRoundedBoxOutline(Index,Pos,Size)
    This:egpColor(Index,Color)  
    This:egpSize(Index,1)
}
function void wirelink:roundboxoutline(Index:number,Pos:vector2,Size:vector2,Color:vector4,S:number){
    This:egpRoundedBoxOutline(Index,Pos,Size)
    This:egpColor(Index,Color)  
    This:egpSize(Index,S)
}
function void wirelink:line(Index:number,Pos1:vector2,Pos2:vector2,Color:vector4,Size:number){
    This:egpLine(Index,Pos1,Pos2)
    This:egpColor(Index,Color)
    This:egpSize(Index,Size)
}
function void wirelink:line(Index:number,Pos1:vector2,Pos2:vector2,Color:vector4){
    This:egpLine(Index,Pos1,Pos2)
    This:egpColor(Index,Color)
}
function void wirelink:text(Index:number,Text:string,Pos:vector2,Color:vector,Size:number){
    This:egpText(Index,Text,Pos)
    This:egpColor(Index,Color)
    This:egpSize(Index,Size)
    This:egpAlign(Index,1,1)
}
function void wirelink:text(Index:number,Text:string,Pos:vector2,Color:vector4,Size:number){
    This:egpText(Index,Text,Pos)
    This:egpColor(Index,Color)
    This:egpSize(Index,Size)
    This:egpAlign(Index,1,1)
}
function void wirelink:text(Index:number,Text:string,Pos:vector2,Color:vector,Size:number,Align:string){
    This:egpText(Index,Text,Pos)
    This:egpColor(Index,Color)
    This:egpSize(Index,Size)
    if(Align == "c"){
        This:egpAlign(Index,1,1)
    }
    elseif(Align == "l"){
        This:egpAlign(Index,2,1)
    }
    elseif(Align == "r"){
        This:egpAlign(Index,0,1)
    }
    else{
        This:egpAlign(Index,1,1)
    }
}
function void wirelink:text(Index:number,Text:string,Pos:vector2,Color:vector4,Size:number,Align:string){
    This:egpText(Index,Text,Pos)
    This:egpColor(Index,Color)
    This:egpSize(Index,Size)
    if(Align == "c"){
        This:egpAlign(Index,1,1)
    }
    elseif(Align == "l"){
        This:egpAlign(Index,2,1)
    }
    elseif(Align == "r"){
        This:egpAlign(Index,0,1)
    }
    else{
        This:egpAlign(Index,1,1)
    }
}
function number wirelink:button(ID:number,Cursor:vector2){
    local BPos = This:egpPos(ID)
    local BSize = This:egpSize(ID)/2
    local Pressed = inrange(Cursor,BPos-BSize,BPos+BSize)
    return Pressed
}

function program(Program_:string){
    
    K3_ActualProgram = Program_
    
    timer(Program_, 0)
      
}

function restart_program(){
    
    program(K3_ActualProgram)
    
}

function number prog_init(Program_:string){
    
    K3_ActualProgram == Program_
    
    return clk(Program_)
    
}

function number prog_loop(Program_:string){
    
    Logic = (K3_ActualProgram == Program_)
    
    return Logic
    
}

function play_sound(SoundName_:string){

    if(IPAD_HP == "in"){
        
        SoundEmitter:setNumber("A", 1)
        SoundEmitter:setString("SampleName", SoundName_)
        
    }
    else
    {
        local Infos = table(
        
            "Res" = SoundName_,
            "Chan" = Musique_Channel
        
        )
        
        dsSend("play", "ipad_os", Infos)   
    }
        
}

function stop_sound(){
    
    if(IPAD_HP == "in"){
        
        SoundEmitter:setNumber("A", 0)
        
    }
    else
    {
        
        dsSend("stop", "ipad_os", Musique_Channel)         
   
    }
    
}

function k3_init(){
    
    K3_S = 512 / 2
    
    IPAD_Name = "iPad de " + owner():name()
    IPAD_SerialNumber = randint(1000, 9999):toString() + "-" + randint(1000, 9999):toString() + "-" + randint(1000, 9999):toString()
    IPAD_Version = "1.0.0"
    
    IPAD_HP = "in"
    
    IPAD_Owner = owner()
    
    dsJoinGroup("ipad_os")
    
    #Musique
    Musique_index = 8
    Musique_Channel = randint(1, 30)
    
    #Portes
    Porte1 = 0
    Porte2 = 0
    Porte3 = 0
    
    stop_sound()
    
}

function draw_app(Index:number, AppName:string, Pos:vector2){
    
    Egp:roundbox(Index, Pos, vec2(128), vec4(255))
    Egp:text(Index + 1, AppName, Pos + vec2(0, 85), vec(255), 25)
    
    if(AppName == "Horloge"){
        
        Egp:egpColor(Index, vec4(45, 45, 45, 255))
        Egp:egpCircle(Index + 2, Pos, vec2(50))
        Egp:box(Index + 3, Pos + vec2(20, 0), vec2(40, 2), vec4(0, 0, 0, 255))
        Egp:box(Index + 4, Pos + vec2(0, -20), vec2(2, 40), vec4(0, 0, 0, 255))
        
    }
    if(AppName == "Printers"){
        
        Egp:egpColor(Index, vec4(35, 35, 35, 255))
        Egp:roundbox(Index + 2, Pos, vec2(100, 20), vec4(100, 100, 100, 255))
        Egp:roundbox(Index + 3, Pos + vec2(40, 0), vec2(15), vec4(35, 35, 35, 255))
        Egp:text(Index + 4, "10,000 kr", Pos, vec4(0, 80, 0, 255), 15)
        
    }
    if(AppName == "Metiers"){
        
        Egp:egpColor(Index, vec4(0, 50, 255, 255))
        Egp:egpCircle(Index + 2, Pos + vec2(0, -25), vec2(30))
        Egp:roundbox(Index + 3, Pos + vec2(0, 30), vec2(55, 60), vec4(255))
        Egp:text(Index + 4, "?", Pos + vec2(0, -25), vec4(0, 50, 255, 255), 40)
        
        
    }
    if(AppName == "Musique"){
        
        Egp:egpCircle(Index + 2, Pos + vec2(0, 25), vec2(15))
        Egp:egpColor(Index + 2, vec4(255, 0, 255, 255))
        Egp:roundbox(Index + 3, Pos + vec2(10, -5), vec2(15, 60), vec4(255, 0, 255, 255))
        Egp:roundbox(Index + 4, Pos + vec2(20, -30), vec2(35, 15), vec4(255, 0, 255, 255))
        
    }
    if(AppName == "Portes"){
        
        Egp:egpColor(Index, vec4(80, 255, 80, 255))
        Egp:roundbox(Index + 2, Pos, vec2(60, 100), vec4(25, 170, 25, 255))
        
    }
    if(AppName == "Parametres"){
        
        Egp:egpColor(Index, vec4(100, 100, 100, 255))
        Egp:roundbox(Index + 2, Pos, vec2(80, 80), vec4(50, 50, 50, 255))
        Egp:roundbox(Index + 3, Pos, vec2(80, 80), vec4(50, 50, 50, 255))
        Egp:egpAngle(Index + 3, 45)
        Egp:egpCircle(Index + 4, Pos, vec2(35))
        Egp:egpColor(Index + 4, vec4(100, 100, 100, 255))
        
    }
    
    if(AppName == "Lotterie"){
        
        Egp:egpColor(Index, vec4(241, 196, 15, 255))
        Egp:text(Index + 2, "L", Pos,  vec4(46, 255, 10, 255), 80)
        
    }
    
    
}

function number faceid(){
    
    FACEID_Checking = 1
    FACEID_R = 0
    FACEID_User = K3_USER
    
    timer("faceid_disappear", 500)
    
    return (FACEID_User == IPAD_Owner)
    
}

if(first() || dupefinished()){
    
    program("bootscreen")
    k3_init()
    
}

if(prog_init("bootscreen")){
    
    Egp:egpCircle(1, vec2(K3_S), vec2(80))
    
    Egp:egpCircle(2, vec2(K3_S + 85, K3_S - 10), vec2(50))
    Egp:egpColor(2, vec4(0, 0, 0, 255))
    
    Egp:egpCircle(3, vec2(K3_S, K3_S + 120), vec2(50))
    Egp:egpColor(3, vec4(0, 0, 0, 255))
    
    Egp:egpCircle(4, vec2(K3_S, K3_S - 120), vec2(50))
    Egp:egpColor(4, vec4(0, 0, 0, 255))
    
    Egp:egpCircle(5, vec2(K3_S + 15, K3_S - 110), vec2(10, 30))
    Egp:egpAngle(5, -45)
    
    play_sound("WallHealth.Start")
    timer("exit_bootscreen", 2000)
    
}

if(!Egp){ program("bootscreen") }
if(clk("exit_bootscreen")){ program("Bureau") }
if(changed(K3_ActualProgram)){ Egp:egpClear() }

K3_USER = Egp["User", entity]
K3_CURSOR = Egp:egpCursor(K3_USER)
K3_USE = K3_USER:keyUse()

K3_Heure = time("hour"):toString()
K3_Minutes = time("min"):toString()
K3_Secondes = time("sec"):toString()

if(K3_Heure:toNumber() < 10){ K3_Heure = "0" + K3_Heure }
if(K3_Minutes:toNumber() < 10){ K3_Minutes = "0" + K3_Minutes }
if(K3_Secondes:toNumber() < 10){ K3_Secondes = "0" + K3_Secondes }

K3_Temps = K3_Heure + ":" + K3_Minutes + ":" + K3_Secondes

S = (K3_S/2) / 1.5
SV = vec2(S, S + 64)


if(prog_init("Bureau")){
    
    draw_app(10, "Horloge", SV)
    
    draw_app(20, "Printers", SV + vec2(170, 0))
    
    draw_app(30, "Metiers", SV + vec2(340, 0))
    
    draw_app(40, "Musique", SV + vec2(0, 170))
    
    draw_app(50, "Portes", SV + vec2(170, 170))
    
    draw_app(60, "Parametres", SV + vec2(340, 170))
    
}
if(prog_loop("Bureau")){
    
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(10, K3_CURSOR)){ program("Horloge") }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(20, K3_CURSOR)){ program("Printers") }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(30, K3_CURSOR)){ program("Metiers") }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(40, K3_CURSOR)){ program("Musique") }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(50, K3_CURSOR)){ program("Portes") }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(60, K3_CURSOR)){ program("Parametres") }
    
}

if(prog_loop("Horloge")){
    
    Egp:egpClear()
    
    Egp:roundbox(10, vec2(K3_S) + vec2(0, 32), vec2(400, 400), vec4(25, 25, 25, 255))
    
    local Moiss = array()

    Moiss[1, string] = "Janvier"
    Moiss[2, string] = "Fevrier"
    Moiss[3, string] = "Mars"
    Moiss[4, string] = "Avril"
    Moiss[5, string] = "Mai"
    Moiss[6, string] = "Juin"
    Moiss[7, string] = "Juillet"
    Moiss[8, string] = "Aout"
    Moiss[9, string] = "Septembre"
    Moiss[10, string] = "Octobre"
    Moiss[11, string] = "Novembre"
    Moiss[12, string] = "Decembre"
    
    local Jour = time("day"):toString()
    local Mois = Moiss[time("month"), string]
    local Annee = time("year"):toString()
    
    Date = Jour + " " + Mois + " " + Annee
    
    Egp:text(2, K3_Temps, vec2(K3_S, K3_S),  vec4(255), 100)
    Egp:text(3, Date, vec2(K3_S, K3_S * 1.7),  vec4(255), 50)
    
}

if(prog_init("Printers")){
    
    Egp:roundbox(20, vec2(K3_S) + vec2(0, 32), vec2(430, 400), vec4(25, 25, 25, 255))
    
    Egp:roundbox(1, vec2(K3_S/2), vec2(120, 40), vec4(80, 80, 80, 255))
    Egp:roundbox(2, vec2(K3_S/2), vec2(100, 20), vec4(100, 100, 100, 255))
    Egp:roundbox(3, vec2(K3_S/2) + vec2(40, 0), vec2(15), vec4(35, 35, 35, 255))
    Egp:text(4, "10,000 kr", vec2(K3_S/2), vec4(0, 80, 0, 255), 15)
    
    Egp:text(5, "normal", vec2(K3_S/2) + vec2(215, 0), vec4(255), 22)
    
    Egp:roundbox(6, vec2(K3_S/2) + vec2(0, 125), vec2(120, 40), vec4(255, 255, 50, 255))
    Egp:roundbox(7, vec2(K3_S/2) + vec2(0, 125), vec2(100, 20), vec4(100, 100, 0, 255))
    Egp:roundbox(8, vec2(K3_S/2) + vec2(40, 125), vec2(15), vec4(80, 80, 0, 255))
    Egp:text(9, "30,000 kr", vec2(K3_S/2) + vec2(0, 125), vec4(0, 80, 0, 255), 15)
    
    Egp:text(10, "vip", vec2(K3_S/2) + vec2(215, 125), vec4(255), 22)
    
    Egp:text(11, "(A proximite)", vec2(K3_S) + vec2(0, 100), vec4(255), 30)
    Egp:text(12, "N'oubliez pas de bouger le trigger !", vec2(K3_S) + vec2(0, 150), vec4(255), 30)
    
}
if(prog_loop("Printers")){
    
    local Ents = Trigger:array("Entities")
    
    if(!Trigger){
        
        Egp:egpSetText(12, "Trigger non connecte")
        
    }
    else
    {
        if(Ents:count() < 1){
            
            Egp:egpSetText(12, "Assurez vous de bouger le trigger")
            
        }
        else
        {
            PrinterCount = 0
            PrinterCountVip = 0
            
            foreach(K, Ent:entity = Ents){
        
                if(Ent:type() == "money_printer"){
                    
                    if(Ent:getSkin() == 0){
                        
                        PrinterCount++
                        
                    }
                    else
                    {
                        PrinterCountVip++
                    }
                        
                }
        
            }
            
            Egp:egpSetText(5, PrinterCount:toString() + " printer(s) detecte(s)")
            Egp:egpSetText(10, PrinterCountVip:toString() + " printer(s) VIP detecte(s)")
            Egp:egpSetText(12, (PrinterCount + PrinterCountVip):toString() + " printer(s) detecte(s)")
            
        }
        
    }
    
    
}

if(prog_init("Metiers")){
    
    Egp:roundbox(10, vec2(K3_S) + vec2(0, 32), vec2(400, 400), vec4(25, 25, 25, 255))
    
    Jobs_list = table(
    
        table("Name" = "Citoyen", "Code" = "citizen"),
        table("Name" = "Agent de police", "Code" = "cp"),
        table("Name" = "Gangster", "Code" = "gangster"),
        table("Name" = "Mercenaire", "Code" = "merc")
    
    )
    
    for(I = 1, Jobs_list:count()){
        
        Egp:text(I, "", vec2(K3_S, K3_S / 2) + vec2(K3_S/2.5, I * 35), vec4(255), 30, "l")
        
        
    }
    
    Egp:text(11, "N'oubliez pas de bouger le trigger !", vec2(K3_S) + vec2(0, 150), vec4(255), 30)
    
}

if(prog_loop("Metiers")){
    
    local Ents = Trigger:array("Entities")
    
    if(!Trigger){
        
        Egp:egpSetText(11, "Trigger non connecte")
        
    }
    else
    {
        if(Ents:count() < 1){
            
            Egp:egpSetText(11, "Assurez vous de bouger le trigger")
            
        }
        else
        {
            
            for(I = 1, Jobs_list:count()){
                
                local Count = 0
                local Job = Jobs_list[I, table]
                local JobName = Job["Name", string]
                local JobCode = Job["Code", string]
                
                foreach(K, Ent:entity = Ents){
                    
                    if(Ent:type() == "player"){
                        
                        if(Ent:nxJob() == JobCode){
                            
                            Count++
                            
                        }
                        
                    }
                    
                }
                
                Egp:egpSetText(I, JobName + "  :  " + Count)
                
            }
            
            Egp:egpSetText(11, "")
            
        }
        
    }
    
}

if(prog_init("Musique")){
    
    Egp:roundbox(1, vec2(K3_S) + vec2(0, 32), vec2(400, 400), vec4(25, 25, 25, 255))
    
    Musique_list = table(
    
        table("Name" = "Citadelle", "Res" = "d1_canals_citadel_music"),
        table("Name" = "Town Intro", "Res" = "d1_town.Music_Intro"),
        table("Name" = "Radio", "Res" = "d1_trainstation.RadioMusic"),
        table("Name" = "Stress", "Res" = "d1_trainstation.CourtyardMusic"),
        table("Name" = "Chasse", "Res" = "d1_trainstation.ChaseMusic"),
        table("Name" = "Song4", "Res" = "song4"),
        table("Name" = "Song6", "Res" = "song6"),
        table("Name" = "Song12", "Res" = "song12_long"),
        table("Name" = "Song16", "Res" = "song16")
    
    )
    
    Egp:roundbox(2, vec2(K3_S) + vec2(-100, 174), vec2(170, 70), vec4(0, 100, 255, 255))
    Egp:text(3, "Play", vec2(K3_S) + vec2(-100, 174), vec4(255), 50)
    
    Egp:roundbox(4, vec2(K3_S) + vec2(100, 174), vec2(170, 70), vec4(0, 100, 255, 255))
    Egp:text(5, "Stop", vec2(K3_S) + vec2(100, 174), vec4(255), 50)
    
    Egp:text(6, "", vec2(K3_S, K3_S - 32), vec4(255), 50)
    
    Egp:roundbox(7, vec2(K3_S) + vec2(-100, 100), vec2(170, 35), vec4(255, 50, 255, 255))
    Egp:text(8, "<-", vec2(K3_S) + vec2(-100, 100), vec4(255), 35)
    
    Egp:roundbox(9, vec2(K3_S) + vec2(100, 100), vec2(170, 35), vec4(255, 50, 255, 255))
    Egp:text(10, "->", vec2(K3_S) + vec2(100, 100), vec4(255), 35)
    
    Egp:roundbox(11, vec2(K3_S) + vec2(0, -125), vec2(60, 35), vec4(35, 150, 35, 255))
    Egp:text(12, "hp", vec2(K3_S) + vec2(0, -125), vec4(255), 35)
    
    Egp:text(13, "", vec2(K3_S) + vec2(0, -90), vec4(255), 15)
        
}
if(prog_loop("Musique")){
    
    local MusName = Musique_list[Musique_index, table]["Name", string]
    local MusRes = Musique_list[Musique_index, table]["Res", string]
    
    Egp:egpSetText(6, MusName)
    
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(2, K3_CURSOR)){ play_sound(MusRes) }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(4, K3_CURSOR)){ stop_sound() }
    
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(7, K3_CURSOR)){
        
        Musique_index--
        
        if(Musique_index < 1){ Musique_index = Musique_list:count() }

    }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(9, K3_CURSOR)){
        
        Musique_index++
        
        if(Musique_index > Musique_list:count()){ Musique_index = 1 }
        
    } 
    
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(11, K3_CURSOR)){ Musique_mode = !Musique_mode }
    
    if(Musique_mode == 0){
        
        Egp:egpSetText(12, "hp")
        Egp:egpSetText(13, "")
        
        IPAD_HP = "in"
    
    }else{
    
        Egp:egpSetText(12, "bt")
        Egp:egpSetText(13, "Channel : " + Musique_Channel)
        
        IPAD_HP = "ex"
        
    }
    
}

if(prog_init("Parametres")){
    
    Egp:roundbox(1, vec2(K3_S) + vec2(0, 32), vec2(400, 400), vec4(25, 25, 25, 255))
    Egp:box(2, vec2(K3_S) + vec2(0, -32*2), vec2(400, 5), vec4(0, 0, 0, 255))
    
    Egp:text(3, "Informations", vec2(K3_S, K3_S - 128), vec4(255), 50)
    Egp:text(4, "Nom : " + IPAD_Name, vec2(K3_S, K3_S - 32), vec4(255), 25)
    
    Egp:box(5, vec2(K3_S) + vec2(0, 0), vec2(400, 5), vec4(0, 0, 0, 255))
    
    Egp:text(6, "N-Serie : " + IPAD_SerialNumber, vec2(K3_S, K3_S + 32), vec4(255), 25)
    
    Egp:box(7, vec2(K3_S) + vec2(0, 32*2), vec2(400, 5), vec4(0, 0, 0, 255))
    
    Egp:text(8, "Version : " + IPAD_Version, vec2(K3_S, K3_S + 32*3), vec4(255), 25)
    
    Egp:box(9, vec2(K3_S) + vec2(0, 32*4), vec2(400, 5), vec4(0, 0, 0, 255))
    
}

if(prog_init("Lockscreen")){
    
    Egp:text(1, "L'iPad est verouille", vec2(K3_S, K3_S - 200), vec4(255), 50)
    
    Egp:roundbox(2, vec2(K3_S), vec2(400, 80), vec4(0, 100, 255, 255))
    Egp:text(3, "Deverouiller avec FaceID", vec2(K3_S), vec4(255), 35)
    
}

if(prog_loop("Lockscreen")){
    
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(2, K3_CURSOR)){
        
        if(faceid()){
            
            program("Bureau")
               
        }
        
        
    }
    
}

if(prog_init("Portes")){
    
    Egp:roundbox(1, vec2(K3_S) + vec2(0, 32), vec2(400, 400), vec4(25, 25, 25, 255))
    
    Egp:roundbox(2, vec2(K3_S, K3_S - 80), vec2(350, 60), vec4(0, 100, 255, 255))
    Egp:text(3, "Porte 1", vec2(K3_S, K3_S - 80), vec4(255), 35)
    
    Egp:roundbox(4, vec2(K3_S), vec2(350, 60), vec4(0, 100, 255, 255))
    Egp:text(5, "Porte 2", vec2(K3_S, K3_S), vec4(255), 35)
    
    Egp:roundbox(6, vec2(K3_S, K3_S + 80), vec2(350, 60), vec4(0, 100, 255, 255))
    Egp:text(7, "Porte 3", vec2(K3_S, K3_S + 80), vec4(255), 35)
    
}
if(prog_loop("Portes")){
    
    function vector4 ntocol(N:number){
        
        if(N){
            return vec4(0, 255, 100, 255)
        }
        else
        {
            return vec4(255, 70, 70, 255)
        }
        
    }
    
    Egp:egpColor(2, ntocol(Porte1))
    Egp:egpColor(4, ntocol(Porte2))
    Egp:egpColor(6, ntocol(Porte3))
    
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(2, K3_CURSOR)){ Porte1 = !Porte1 }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(4, K3_CURSOR)){ Porte2 = !Porte2 }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(6, K3_CURSOR)){ Porte3 = !Porte3 }
    
}



if(K3_ActualProgram != "bootscreen" & K3_ActualProgram != "Lockscreen"){
    
    Egp:box(100, vec2(K3_S, K3_S * 0.128), vec2(K3_S * 2, 60), vec4(45, 45, 45, 255))
    Egp:text(101, "iPad", vec2(S + 340, K3_S * 0.128),  vec4(255), 25)
    Egp:text(102, K3_Temps, vec2(S, K3_S * 0.128),  vec4(255), 25)
    Egp:roundbox(103, vec2(K3_S - 45, K3_S * 0.128), vec2(45, 45), vec4(150, 150, 150, 255))
    Egp:roundbox(104, vec2(K3_S + 45, K3_S * 0.128), vec2(45, 45), vec4(255, 90, 90, 255))
    
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(103, K3_CURSOR)){ program("Bureau") }
    if((changed(K3_USE) & K3_USE == 1) && Egp:button(104, K3_CURSOR)){ program("Lockscreen") }
}

if(FACEID_Checking){
    
    FACEID_R += 1

    Egp:roundbox(200, vec2(K3_S), vec2(150), vec4(0, 0, 0, 255))
    Egp:roundboxoutline(201, vec2(K3_S), vec2(150), vec4(255))
    Egp:text(202, "", vec2(K3_S + 15, K3_S), vec4(255), 150)
    
    Egp:egpAngle(200, FACEID_R)
    Egp:egpAngle(201, FACEID_R)
    
    Egp:egpAngle(202, -90 - FACEID_R/5)
    
    
    if(FACEID_User == IPAD_Owner){
        
        Egp:egpColor(201, vec4(0, 255, 0, 255))
        Egp:egpSetText(202, ":)")
        
    }
    else
    {
        Egp:egpColor(201, vec4(255, 0, 0, 255))
        Egp:egpSetText(202, ":(")
    }
    
}

if(clk("faceid_disappear")){
    
    Egp:egpRemove(200)
    Egp:egpRemove(201)
    Egp:egpRemove(202)
    
    FACEID_Checking = 0
    
}

#[

  _ _____          _    ____   _____ 
 (_)  __ \        | |  / __ \ / ____|
  _| |__) |_ _  __| | | |  | | (___  
 | |  ___/ _` |/ _` | | |  | |\___ \ 
 | | |  | (_| | (_| | | |__| |____) |
 |_|_|   \__,_|\__,_|  \____/|_____/ 
                                     
    By K3CR4FT.:DLL - 2020                                  

]#


