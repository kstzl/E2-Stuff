#SEAL Запаковывайте чипы директивой SEAL#
#PACK Упаковывайте чипы чтобы повысить скорость обработки#
@name 
@inputs 
@outputs 
#default O:owner E:entity
@persist 
#@interval 0
if(first()|dupefinished()){

}
#[
			[Expression 2 Mark II]
			[Directives]
				[#SEAL] Запаковывает чип, закрывая от изменения. Директива должна находиться в самом верху чипа и завершаться новой строкой.
				[#PACK] Работает с #SEAL. Упаковывает чип удаляя информацию о строках кода и информацию для отладки, значительно ускоряет обработку чипа.
				[#COMMENT] Работает с #SEAL. Добавляет комментарий, который отображается в цифровой подписи чипа.
				[@interval] Указывает как будет работать чип. 0 - аналог runOnTick(1), больше нуля - аналог interval(#)
			[Objects]
				[<Переменная>.<Поле>=<выражение>] Вы можете поместить любой тип данных в поле с произвольным именем в Entity, таблицу или массив.
				[<Переменная>.<Имя_функции>] Вы можете вызывать существующие функции без аргументов при помощи свойств.
					print(O.Pos) #Выведет позицию владельца чипа
				[<Переменная>.<Поле_или_функция>=<выражение>] Если есть функция set<Поле> с одним аргументом - чип вызовет её. Если нет - создаст и запишет поле свойств:
					O.Health=1 #Вызовет O:setHealth(1)
				[Вы можете создать функции-обёртки чтобы выполнять действия при задании полей]
					function void entity:setNick(S:string){ This.Nick_=S,print("Имя изменено на: "+S) }
					function string entity:nick(){ return This.Nick_ }
					O.Nick="Mr.Dick" #Имя изменено на: Mr.Dick
					print(O.Nick) #Mr.Dick
				[<тип>(<Переменная>.<Поле>)] Вы можете приводить поля к нужному типу.
			[Enums]
				[Вы можете создавать флаги и перечисления]
				enum[
					_ONE="TEST"	#TEST
					_TWO	#Будет равно 0
					_THREE=5	#Будет равно... ПЯТИ
					_FOUR	#Будет равно ШЕСТИ
				]
			И
				flags[
					_DEAD	#1
					_HURT	#2
					_BLA	#4
				]
			[Defaults]
				[O:owner] Во всех чипах переменная O установлена в owner() по умолчанию. Объявлять её не нужно.
				[E:entity] Во всех чипах переменная E установлена в entity() по умолчанию. Объявлять её не нужно.
]#